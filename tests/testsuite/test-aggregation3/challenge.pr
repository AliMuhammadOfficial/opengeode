/* CIF PROCESS (163, 147), (150, 75) */
process challenge;
    state aggregation Aggreg;
    substructure
            state A;
            substructure
                    /* CIF START (146, 110), (70, 35) */
                    START;
                        /* CIF PROCEDURECALL (83, 165), (194, 35) */
                        call writeln ('[-] State A starting');
                        /* CIF NEXTSTATE (146, 215), (70, 35) */
                        NEXTSTATE waiting;
                    /* CIF state (355, 163), (78, 35) */
                    state In_Action;
                        /* CIF provided (354, 218), (80, 35) */
                        provided action = 1;
                            /* CIF PROCEDURECALL (299, 273), (191, 35) */
                            call writeln ('[4] Action 1 DONE');
                            /* CIF task (353, 323), (83, 35) */
                            task action := 0;
                            /* CIF NEXTSTATE (351, 378), (86, 35) */
                            NEXTSTATE completed;
                    endstate;
                    /* CIF state (557, 179), (93, 35) */
                    state completed;
                        /* CIF provided (562, 234), (80, 35) */
                        provided action = 3;
                            /* CIF PROCEDURECALL (507, 289), (191, 35) */
                            call writeln ('[7] Quitting');
                            /* CIF return (585, 339), (35, 35) */
                            return ;
                    endstate;
                    /* CIF state (146, 215), (70, 35) */
                    state waiting;
                        /* CIF provided (140, 270), (80, 35) */
                        provided action = 1;
                            /* CIF PROCEDURECALL (84, 325), (192, 35) */
                            call writeln ('[3] Action 1 START');
                            /* CIF task (139, 380), (83, 35) */
                            task action := 0;
                            /* CIF NEXTSTATE (142, 430), (76, 35) */
                            NEXTSTATE in_action;
                    endstate;
            endsubstructure;
            state B;
            substructure
                    /* CIF START (247, 103), (70, 35) */
                    START;
                        /* CIF PROCEDURECALL (181, 158), (202, 35) */
                        call writeln ('[-] State B starting');
                        /* CIF NEXTSTATE (247, 208), (70, 35) */
                        NEXTSTATE waiting;
                    /* CIF state (506, 142), (78, 35) */
                    state In_Action;
                        /* CIF provided (503, 197), (87, 35) */
                        provided action = 2;
                            /* CIF PROCEDURECALL (450, 252), (191, 35) */
                            call writeln ('[6] Action 2 DONE');
                            /* CIF task (504, 302), (83, 35) */
                            task action := 3;
                            /* CIF return (529, 357), (35, 35) */
                            return ;
                    endstate;
                    /* CIF state (247, 208), (70, 35) */
                    state waiting;
                        /* CIF provided (241, 263), (80, 35) */
                        provided action = 2;
                            /* CIF PROCEDURECALL (185, 318), (192, 35) */
                            call writeln ('[5] Action 2 START');
                            /* CIF task (240, 373), (83, 35) */
                            task action := 0;
                            /* CIF NEXTSTATE (243, 423), (76, 35) */
                            NEXTSTATE in_action;
                    endstate;
            endsubstructure;
            /* CIF state (270, 326), (70, 35) */
            state B;
            endstate;
            /* CIF state (220, 192), (70, 35) */
            state A;
            endstate;
    endsubstructure;
    /* CIF TEXT (150, 0), (298, 56) */
    -- This system tests nested states
    
    dcl action T_uint32 :=0;
    /* CIF ENDTEXT */
    /* CIF START (89, 75), (68, 37) */
    START;
        /* CIF PROCEDURECALL (50, 127), (144, 35) */
        call writeln('[1] Startup');
        /* CIF NEXTSTATE (88, 177), (70, 35) */
        NEXTSTATE Off;
    /* CIF state (419, 123), (84, 35) */
    state Aggreg;
        /* CIF input (526, 178), (72, 35) */
        input any_two;
            /* CIF PROCEDURECALL (461, 233), (202, 35) */
            call writeln('[-] Received any_two');
            /* CIF task (520, 283), (86, 35) */
            task action := 2;
            /* CIF NEXTSTATE (528, 338), (70, 35) */
            NEXTSTATE -*;
        /* CIF input (319, 178), (72, 35) */
        input any_one;
            /* CIF PROCEDURECALL (253, 233), (202, 35) */
            call writeln('[-] Received any_one');
            /* CIF task (313, 283), (83, 35) */
            task action := 1;
            /* CIF NEXTSTATE (320, 338), (70, 35) */
            NEXTSTATE -*;
    endstate;
    /* CIF state (85, 242), (70, 35) */
    state Off;
        /* CIF input (85, 297), (70, 35) */
        input run;
            /* CIF PROCEDURECALL (0, 347), (240, 35) */
            call writeln('[2] Entering  Parallel states');
            /* CIF NEXTSTATE (78, 397), (84, 35) */
            NEXTSTATE Aggreg;
    endstate;
endprocess challenge;